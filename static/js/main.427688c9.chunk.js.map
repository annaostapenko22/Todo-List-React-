{"version":3,"sources":["components/TodoListItems/TodoListItems.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["TodoListItems","onLabelClick","setState","done","handleImportance","state","important","this","props","label","onDeleted","onToggleDone","onToggleImportant","classNames","className","onClick","type","Component","TodoList","todos","elems","map","item","id","itemProps","key","AppHeader","toDo","SearchPanel","value","onChange","evt","getValue","target","onHandleFilter","placeholder","ItemStatusFilter","onClickActive","changeFilterState","onClickAll","onClickDone","ItemAddForm","onLabelChange","enteredValue","onSubmit","preventDefault","onItemAdded","getItem","JSON","parse","localStorage","App","maxId","todoData","filter","search","addItem","text","newItem","createTodoItem","setItem","stringify","deletItem","elem","toggleProperty","idx","findIndex","oldItem","slice","setSearchState","toLowerCase","setFilterState","filterItems","todoList","includes","filterActiveItems","filterAllItems","filterDoneItems","arr","propName","filteredItems","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"6XAGqBA,G,iNAWnBC,aAAe,WAGb,EAAKC,UAAS,YACZ,MAAO,CACLC,MAFwB,EAAXA,U,EAMnBC,iBAAmB,WACjB,EAAKF,UAAS,SAAAG,GACZ,MAAO,CACLC,WAAY,EAAKD,MAAMC,e,wEAKnB,IAAD,EAQHC,KAAKC,MANPC,EAFK,EAELA,MACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,aACAC,EALK,EAKLA,kBAIEC,EAAa,iBAOjB,OAhBO,EAMLV,OAKAU,GAAc,SAXT,EAOLP,YAOAO,GAAc,cAGd,8BACE,0BAAMC,UAAWD,EAAYE,QAASJ,GACnCF,GAEH,4BACEO,KAAK,SACLF,UAAU,6CACVC,QAASH,GAET,uBAAGE,UAAU,uBAEf,4BACEE,KAAK,SACLF,UAAU,4CACVC,QAASL,GAET,uBAAGI,UAAU,wB,GA7DoBG,cCkB5BC,G,MAlBE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOT,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAC5CQ,EAAQD,EAAME,KAAI,SAAAC,GAAS,IACvBC,EAAqBD,EAArBC,GAAOC,EADe,YACDF,EADC,QAE9B,OACE,wBAAIG,IAAKF,EAAIT,UAAU,mBACrB,kBAAC,EAAD,iBACMU,EADN,CAEEd,UAAW,kBAAMA,EAAUa,IAC3BZ,aAAc,kBAAMA,EAAaY,IACjCX,kBAAmB,kBAAMA,EAAkBW,WAMnD,OAAO,wBAAIT,UAAU,wBAAwBM,KCLhCM,G,MAXG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMxB,EAAW,EAAXA,KACzB,OACE,yBAAKW,UAAU,qBACb,yCACA,4BACGa,EADH,gBACsBxB,EADtB,YCJeyB,G,iNACnBvB,MAAQ,CACNwB,MAAO,I,EAGTC,SAAW,SAAAC,GACT,IAAMC,EAAWD,EAAIE,OAAOJ,MAC5B,EAAKrB,MAAM0B,eAAeF,I,wEAI1B,OACE,2BACElB,UAAU,4BACVqB,YAJe,sBAKfL,SAAUvB,KAAKuB,e,GAfkBb,cCApBmB,G,iNACnBvB,WAAa,4B,EACbwB,cAAgB,WACd,EAAK7B,MAAM8B,kBAAkB,S,EAE/BC,WAAa,WACX,EAAK/B,MAAM8B,kBAAkB,Q,EAE/BE,YAAc,WACZ,EAAKhC,MAAM8B,kBAAkB,S,wEAK7B,OACE,yBAAKxB,UAAU,aACb,4BAAQE,KAAK,SAASF,UAJT,eAIgCC,QAASR,KAAKgC,YAA3D,OAGA,4BACEvB,KAAK,SACLF,UATW,eAUXC,QAASR,KAAK8B,eAHhB,UAOA,4BAAQrB,KAAK,SAASF,UAdT,eAcgCC,QAASR,KAAKiC,aAA3D,a,GA1BsCvB,cCAzBwB,G,uNACnBpC,MAAQ,CACNI,MAAO,I,EAETiC,cAAgB,SAAAX,GACd,IAAMY,EAAeZ,EAAIE,OAAOJ,MAChC,EAAK3B,SAAS,CAAEO,MAAOkC,K,EAGzBC,SAAW,SAAAb,GACTA,EAAIc,iBACJ,EAAKrC,MAAMsC,YAAY,EAAKzC,MAAMI,OAClC,EAAKP,SAAS,CAAEO,MAAO,M,wEAGvB,OACE,0BAAMK,UAAU,gBAAgB8B,SAAUrC,KAAKqC,UAC7C,2BACE5B,KAAK,OACLF,UAAU,eACVgB,SAAUvB,KAAKmC,cACfP,YAAY,yBACZN,MAAOtB,KAAKF,MAAMI,QAEpB,4BAAQK,UAAU,6BAAlB,iB,GAxBiCG,cCKnC8B,EAAUC,KAAKC,MAAMC,aAAaH,QAAQ,SAC3BI,E,2MACnBC,MAAQ,I,EACR/C,MAAQ,CACNgD,SAAUN,GAAoB,GAC9BO,OAAQ,MACRC,OAAQ,I,EASVC,QAAU,SAAAC,GACR,IAAMC,EAAU,EAAKC,eAAeF,GACpC,EAAKvD,UAAS,YAAmB,IAAhBmD,EAAe,EAAfA,SAEf,MAAO,CACLA,SAFa,sBAAOA,GAAP,CAAiBK,QAKlCR,aAAaU,QAAQ,OAAQZ,KAAKa,UAAU,EAAKxD,MAAMgD,Y,EAWzDS,UAAY,SAAAvC,GACV,EAAKrB,UAAS,YAEZ,MAAO,CACLmD,SAH4B,EAAfA,SACSC,QAAO,SAAAS,GAAI,OAAIA,EAAKxC,KAAOA,U,EAYvDX,kBAAoB,SAAAW,GAClB,EAAKrB,UAAS,YAAmB,IAAhBmD,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKW,eAAeX,EAAU9B,EAAI,kB,EAIlDZ,aAAe,SAAAY,GACb,EAAKrB,UAAS,YAAmB,IAAhBmD,EAAe,EAAfA,SACTY,EAAMZ,EAASa,WAAU,SAAAH,GAAI,OAAIA,EAAKxC,KAAOA,KAC7C4C,EAAUd,EAASY,GACnBP,EAAO,eAAQS,EAAR,CAAiBhE,MAAOgE,EAAQhE,OAM7C,MAAO,CACLkD,SANU,sBACPA,EAASe,MAAM,EAAGH,IADX,CAEVP,GAFU,YAGPL,EAASe,MAAMH,EAAM,U,EAQ9BI,eAAiB,SAAAxC,GACf,EAAK3B,SAAS,CAAEqD,OAAQ1B,EAAMyC,iB,EAGhCC,eAAiB,SAAAlE,GACf,EAAKH,SAAS,CAAEoD,OAAQjD,K,EAE1BmE,YAAc,SAACjB,EAAQD,EAAQD,GAC7B,IAAIoB,EAAQ,YAAOpB,GAanB,MAZe,SAAXC,EACFmB,EAAWA,EAASnB,QAAO,SAAAS,GACzB,OAAOA,EAAK5D,QAEM,SAAXmD,IACTmB,EAAWA,EAASnB,QAAO,SAAAS,GAAI,OAAKA,EAAK5D,SAEvCoD,IACFkB,EAAWA,EAASnB,QAAO,SAAAS,GAAI,OAC7BA,EAAKtD,MAAM6D,cAAcI,SAASnB,OAG/BkB,G,EAGTE,kBAAoB,WAClB,EAAKzE,UAAS,YAEZ,MAAO,CACLmD,SAH4B,EAAfA,SACSC,QAAO,SAAAS,GAAI,OAAKA,EAAK5D,a,EAOjDyE,eAAiB,WACf,EAAK1E,SAAS,CAAEmD,SAAU,EAAKhD,MAAMgD,Y,EAGvCwB,gBAAkB,WAChB,EAAK3E,UAAS,YAEZ,MAAO,CACLmD,SAH4B,EAAfA,SACSC,QAAO,SAAAS,GAAI,OAAIA,EAAK5D,a,mFArG9C+C,aAAaU,QAAQ,OAAQZ,KAAKa,UAAUtD,KAAKF,MAAMgD,a,2CAGvDH,aAAaU,QAAQ,OAAQZ,KAAKa,UAAUtD,KAAKF,MAAMgD,a,qCAc1C5C,GACb,MAAO,CACLA,QACAH,WAAW,EACXH,MAAM,EACNoB,GAAIhB,KAAK6C,W,qCAWE0B,EAAKvD,EAAIwD,GACtB,IAAMd,EAAMa,EAAIZ,WAAU,SAAAH,GAAI,OAAIA,EAAKxC,KAAOA,KACxC4C,EAAUW,EAAIb,GACdP,EAAO,eAAQS,EAAR,eAAkBY,GAAYZ,EAAQY,KACnD,MAAM,GAAN,mBAAWD,EAAIV,MAAM,EAAGH,IAAxB,CAA8BP,GAA9B,YAA0CoB,EAAIV,MAAMH,EAAM,O,+BAuElD,IAAD,EAC8B1D,KAAKF,MAAlCgD,EADD,EACCA,SAAUE,EADX,EACWA,OAAQD,EADnB,EACmBA,OACpB0B,EAAgBzE,KAAKiE,YAAYjB,EAAQD,EAAQD,GACjD4B,EAAY5B,EAASC,QAAO,SAAAS,GAAI,OAAIA,EAAK5D,QAAM+E,OAC/CC,EAAY9B,EAAS6B,OAASD,EAEpC,OACE,yBAAKnE,UAAU,aACb,kBAAC,EAAD,CAAWa,KAAMwD,EAAWhF,KAAM8E,IAClC,kBAAC,EAAD,CAAa/C,eAAgB3B,KAAK8D,iBAClC,kBAAC,EAAD,CAAkB/B,kBAAmB/B,KAAKgE,iBAC1C,kBAAC,EAAD,CACEpD,MAAO6D,EACPtE,UAAWH,KAAKuD,UAChBlD,kBAAmBL,KAAKK,kBACxBD,aAAcJ,KAAKI,eAErB,kBAAC,EAAD,CAAamC,YAAavC,KAAKiD,e,GArINvC,aCJjCmE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.427688c9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./TodoListItem.css\";\r\n\r\nexport default class TodoListItems extends Component {\r\n  //   constructor() {\r\n  //     super()\r\n  // this.state = {\r\n  //   done: false\r\n  // }\r\n  // }\r\n  // state = {\r\n  //   done: false,\r\n  //   important: false\r\n  // };\r\n  onLabelClick = () => {\r\n    // console.log(\"done\", this.props.label);\r\n\r\n    this.setState(({ done }) => {\r\n      return {\r\n        done: !done\r\n      };\r\n    });\r\n  };\r\n  handleImportance = () => {\r\n    this.setState(state => {\r\n      return {\r\n        important: !this.state.important\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      onToggleDone,\r\n      onToggleImportant,\r\n      done,\r\n      important\r\n    } = this.props;\r\n    let classNames = \"todo-list-item\";\r\n    if (done) {\r\n      classNames += \" done\";\r\n    }\r\n    if (important) {\r\n      classNames += \" important\";\r\n    }\r\n    return (\r\n      <span>\r\n        <span className={classNames} onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <i className=\"fa fa-exclamation\"></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}\r\n        >\r\n          <i className=\"fa fa-trash-o\"></i>\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TodoListItems from \"../TodoListItems/TodoListItems\";\r\nimport \"./TodoList.css\";\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n  const elems = todos.map(item => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItems\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todo-list\">{elems}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./AppHeader.css\";\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchPanel.css\";\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    value: \"\"\r\n  };\r\n\r\n  onChange = evt => {\r\n    const getValue = evt.target.value;\r\n    this.props.onHandleFilter(getValue);\r\n  };\r\n  render() {\r\n    const searchText = \"Type here to search\";\r\n    return (\r\n      <input\r\n        className=\"form-control search-panel\"\r\n        placeholder={searchText}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./ItemStatusFilter.css\";\r\nexport default class ItemStatusFilter extends Component {\r\n  classNames = \"btn btn-outline-secondary\";\r\n  onClickActive = () => {\r\n    this.props.changeFilterState(\"todo\");\r\n  };\r\n  onClickAll = () => {\r\n    this.props.changeFilterState(\"all\");\r\n  };\r\n  onClickDone = () => {\r\n    this.props.changeFilterState(\"done\");\r\n  };\r\n  render() {\r\n    let classNames = \"btn btn-info\";\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className={classNames} onClick={this.onClickAll}>\r\n          All\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={classNames}\r\n          onClick={this.onClickActive}\r\n        >\r\n          Active\r\n        </button>\r\n        <button type=\"button\" className={classNames} onClick={this.onClickDone}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./ItemAddForm.css\";\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\"\r\n  };\r\n  onLabelChange = evt => {\r\n    const enteredValue = evt.target.value;\r\n    this.setState({ label: enteredValue });\r\n  };\r\n\r\n  onSubmit = evt => {\r\n    evt.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({ label: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"What's new item to do?\"\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\r\nimport \"./App.css\";\r\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\r\nconst getItem = JSON.parse(localStorage.getItem(\"data\"));\r\nexport default class App extends Component {\r\n  maxId = 101;\r\n  state = {\r\n    todoData: getItem ? getItem : [],\r\n    filter: \"all\",\r\n    search: \"\"\r\n  };\r\n  componentDidMount() {\r\n    localStorage.setItem(\"data\", JSON.stringify(this.state.todoData));\r\n  }\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"data\", JSON.stringify(this.state.todoData));\r\n  }\r\n\r\n  addItem = text => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({ todoData }) => {\r\n      const newObject = [...todoData, newItem];\r\n      return {\r\n        todoData: newObject\r\n      };\r\n    });\r\n    localStorage.setItem(\"data\", JSON.stringify(this.state.todoData));\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n  deletItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const newObj = todoData.filter(elem => elem.id !== id);\r\n      return {\r\n        todoData: newObj\r\n      };\r\n    });\r\n  };\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex(elem => elem.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n  onToggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\")\r\n      };\r\n    });\r\n  };\r\n  onToggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex(elem => elem.id === id);\r\n      const oldItem = todoData[idx];\r\n      const newItem = { ...oldItem, done: !oldItem.done };\r\n      const newArr = [\r\n        ...todoData.slice(0, idx),\r\n        newItem,\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  setSearchState = value => {\r\n    this.setState({ search: value.toLowerCase() });\r\n  };\r\n\r\n  setFilterState = state => {\r\n    this.setState({ filter: state });\r\n  };\r\n  filterItems = (search, filter, todoData) => {\r\n    let todoList = [...todoData];\r\n    if (filter === \"done\") {\r\n      todoList = todoList.filter(elem => {\r\n        return elem.done;\r\n      });\r\n    } else if (filter === \"todo\") {\r\n      todoList = todoList.filter(elem => !elem.done);\r\n    }\r\n    if (search) {\r\n      todoList = todoList.filter(elem =>\r\n        elem.label.toLowerCase().includes(search)\r\n      );\r\n    }\r\n    return todoList;\r\n  };\r\n\r\n  filterActiveItems = () => {\r\n    this.setState(({ todoData }) => {\r\n      const newObj = todoData.filter(elem => !elem.done);\r\n      return {\r\n        todoData: newObj\r\n      };\r\n    });\r\n  };\r\n\r\n  filterAllItems = () => {\r\n    this.setState({ todoData: this.state.todoData });\r\n  };\r\n\r\n  filterDoneItems = () => {\r\n    this.setState(({ todoData }) => {\r\n      const newObj = todoData.filter(elem => elem.done);\r\n      return {\r\n        todoData: newObj\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, search, filter } = this.state;\r\n    const filteredItems = this.filterItems(search, filter, todoData);\r\n    const doneCount = todoData.filter(elem => elem.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <SearchPanel onHandleFilter={this.setSearchState} />\r\n        <ItemStatusFilter changeFilterState={this.setFilterState} />\r\n        <TodoList\r\n          todos={filteredItems}\r\n          onDeleted={this.deletItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <ItemAddForm onItemAdded={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}